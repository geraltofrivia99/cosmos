{"version":3,"sources":["images/mars.jpg","Components/Placeholder/styled.js","Components/Placeholder/index.js","Components/Slider/styled.js","Components/Slider/index.js","Components/CDImage/styled.js","Components/DotsLoader/styled.js","Components/DotsLoader/index.js","Components/Buttons/FetchImageBtn/styled.js","Components/CDImage/index.js","Components/Buttons/FetchImageBtn/index.js","Components/CDImageData/styled.js","Components/CDImageData/index.js","Components/Cards/SolCard/styled.js","Components/Cards/SolCard/index.js","Pages/DayliPhoto/styled.js","Pages/DayliPhoto/index.js","utils/index.js","Pages/MarsTemp/styled.js","Pages/MarsTemp/index.js","store/dayli.js","store/mars.js","store/shared.js","styled.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","placeHolderSwept","keyframes","Container","styled","div","Placeholder","React","memo","fadeIn","SliderWrapper","Slide","Image","img","SliderComponent","observer","data","cfg","setLoadedSlides","map","cur","i","key","date","setLoaded","value","index","activeIndex","slideIndex","useState","isLoad","isFinishLoad","isLoadData","setLoad","useEffect","src","url","onload","onerror","style","display","setDisplay","alt","ImageWrapper","opacity","span","loader51","loader52","loader53","loader54","loader55","Dots","button","Link","a","CDImage","href","download","defaultImage","hdImage","isHdImageLoad","setCurentImageOpacity","handleLoading","useCallback","console","log","onLoad","onError","anim1","Descriptions","Wrapper","Title","CDImageData","title","exp","Front","Back","Sol","Date","Separator","Temp","Hight","Min","SolCard","min","max","sol","DayliSection","section","settings","transitionMode","cellSpacing","slidesToShow","slidesToScroll","heightMode","Dayli","dayliData","fullDaysData","addPrevDays","loadedImages","fullDaysDataMap","setSlideIndex","curentImageOpacity","afterSlide","nextSlide","length","beforeSlide","_","next","curentSlideData","isCurentHdImageLoad","get","hdurl","explanation","monthsShort","months","getParsedDate","monthType","d","getUTCMonth","getUTCDate","scrollToY","y","window","scrollTo","top","behavior","delay","f","ms","setTimeout","apply","arguments","typing","blinkCaret","borderfadeOut","BgImageWrapper","BgImage","TitleWrapper","SubTitle","Description","CurrentData","CurrentDate","CurrentSoll","CurentDay","CurentTemp","CurentMaxTemp","CurentMinTemp","SolCardsWrapper","MarsTemp","marsData","fetchData","currentSol","currentDate","allData","solKeys","isImageLoad","image","memoizedSolCards","useMemo","AT","mn","mx","Math","ceil","First_UTC","renderSolsCards","memoizedCurrentSol","renderCurrentSol","DailyStore","props","daysData","_offset","_array","Map","renderSlides","daysNumber","res","lastDay","cD","setDate","getDate","nD","getTime","getTimezoneOffset","toISOString","split","push","concat","fetchFunc","array","async","Promise","all","fetch","then","resp","json","addfullDaysData","media_type","isLoadUrl","setLoadedImage","set","this","decorate","observable","action","bound","setRenderSlides","MarsStore","test","setAllData","setSolKeys","sol_keys","currentSollSetter","featuredSol","featuredSolObject","currentDateSetter","sols","curentSoll","SharedStore","marsYCoord","currentPage","marsWasMounted","dayliWasMounted","setCurentPage","page","ScrollControls","FakeView","dayliStore","marsStore","App","store","imageVisible","setImageVisible","callback","marsImage","loadImage","innerHeight","document","body","getBoundingClientRect","abs","renderMars","id","className","renderDayli","onWheel","e","onClick","Boolean","location","hostname","match","sharedStore","rootEl","getElementById","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.000612fb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mars.c2c7784f.jpg\";","import styled, { keyframes } from 'styled-components';\r\n\r\nconst placeHolderSwept = keyframes `\r\n   0%{\r\n    transform: translate3d(-100%, 0, 0);\r\n  }\r\n 100%{\r\n    transform: translate3d(100%, 0, 0);\r\n  }\r\n`;\r\n\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(31,31,31,1);\r\n  position: relative;\r\n  overflow: hidden;\r\n  &:after {\r\n    content: '';\r\n    background-color: rgba(31,31,31,1);\r\n    /* background-color: #ffffff; */\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    animation-duration: 0.6s;\r\n    animation-iteration-count: infinite;\r\n    animation-name: ${placeHolderSwept};\r\n    animation-timing-function: linear;\r\n    background: linear-gradient(to right, rgba(31,31,31,0) 0%, rgba(77, 75, 75, 0.4) 30%, rgba(31,31,31,0) 81%);\r\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#00ffffff', endColorstr='#00ffffff',GradientType=1 );\r\n  }\r\n  &:before {\r\n    content: '';\r\n    height: 100%;\r\n    display: block;\r\n    background-color: rgba(31,31,31,1);\r\n    box-shadow: -48px 78px 0 -48px #ededed, -51px 102px 0 -51px #ededed;\r\n  }\r\n`;","import React from 'react';\r\nimport { Container } from './styled'; \r\n\r\nexport const Placeholder = React.memo(() => (\r\n  <Container />\r\n));","import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n    0% {\n        opacity: 0;\n    }\n    100% {\n        opacity: 1;\n    }\n`;\n\nexport const SliderWrapper = styled.div`\n    width: 100%;\n    max-width: 350px;\n    height: 11rem;\n    display: flex;\n    align-self: flex-end;\n    @media (max-width: 1000px) {\n        max-width: 250px;\n        height: 9rem;\n    }\n`;\n\n// ------------------- Slide ------------------\n\nexport const Slide = styled.div`\n    background-color: rgba(31,31,31,1);\n    box-shadow: 0 1px 2px 1px rgba(0,0,0,.08), 0 -1px 3px 0 rgba(0,0,0,0.06);\n    border-radius: 2px;\n    overflow: hidden;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 8rem;\n    /* -webkit-box-reflect: below 1px linear-gradient(transparent, #0005); */\n    -webkit-box-reflect: below 0px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(60%, transparent), to(#0005));\n    @media (max-width: 1000px) {\n        height: 6rem;\n    }\n`;\n\nexport const Image = styled.img`\n    height: 100%;\n    width: 100%;\n    opacity: 0;\n    animation: ${fadeIn} .5s ease-in-out forwards;\n`;","import React, { useEffect, useState } from 'react';\nimport Carousel from 'nuka-carousel';\nimport { observer } from \"mobx-react\";\n// import { DotsLoader } from '../DotsLoader'\nimport { Placeholder } from '../Placeholder';\n\nimport * as S from './styled';\n\n\nexport const SliderComponent = observer(({ data, cfg, setLoadedSlides }) => {\n  // console.log('render COMPONENT SLIDER', data, cfg, setLoadedSlides);\n  const renderSlides = () => data.map((cur, i) => {\n    const setLoaded = (value) => {\n      setLoadedSlides(i, value);\n    }\n    return <Slide\n      key={i + cur.date}\n      data={cur}\n      setLoaded={setLoaded}\n      index={i}\n      activeIndex={cfg.slideIndex}\n    />\n  })\n  // const renderSlidesMemo = useMemo(() => renderSlides(), [data.length])\n  return (\n    <S.SliderWrapper>\n      <Carousel {...cfg}>\n      {renderSlides()}\n      </Carousel>\n    </S.SliderWrapper>\n  )\n});\n\nconst Slide = React.memo(({data, setLoaded, activeIndex, index}) => {\n  const [isLoadData, setLoad] = useState({ isLoad: false, isFinishLoad: false });\n  useEffect(() => {\n    const img = new Image();\n    img.src = data.url;\n    img.onload = () => {\n      setLoad({ isLoad: true, isFinishLoad: true });\n    }\n    img.onerror = () => {\n      setLoad({ isLoad: false, isFinishLoad: true });\n    }\n  }, [])\n  return (\n    <S.Slide style={{ display: setDisplay(activeIndex, index) ? 'block' : 'none' }}>\n      {!isLoadData.isLoad && (activeIndex === index || activeIndex + 1 === index)  ? \n      <Placeholder /> :\n      <S.Image\n        src={data.url}\n        alt=\"\"\n      />}\n    </S.Slide>\n  )\n});\n\nfunction setDisplay(activeIndex, index) {\n  if (activeIndex === index || activeIndex === index + 1 || activeIndex === index - 1\n    || activeIndex === index + 2 || activeIndex === index - 2) {\n    return true;\n  }\n  return false;\n}","import styled, { keyframes } from 'styled-components';\nimport Img from 'react-image';\n\nexport const ImageWrapper = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: #1f1f1f;\n`;\n\nexport const Image = styled.img`\n    width: 100%;\n    height: 100%;\n    opacity: ${({ opacity }) => opacity};\n    transition: opacity 1s ease-in-out;\n`;\n\nexport const LoadingHd = styled.span`\n    position: absolute;\n    top: 20px;\n    right: 20px;\n    color: #ffffff;\n    display: flex;\n    flex-direction: row;\n    z-index: 10;\n`;\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst loader51 = keyframes`\r\n    {\r\n        0%   { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n    }\r\n`;\r\n\r\nconst loader52 = keyframes`\r\n    {\r\n        0%   { transform: translate3d(0, 0, 0) scale(1); }\r\n        50%  { transform: translate3d(24px, 0, 0) scale(.5); }\r\n        100% { transform: translate3d(0, 0, 0) scale(1); }\r\n    }\r\n`;\r\n\r\nconst loader53 = keyframes`\r\n    {\r\n        0%   { transform: translate3d(0, 0, 0) scale(1); }\r\n        50%  { transform: translate3d(-24px, 0, 0) scale(.5); }\r\n        100% { transform: translate3d(0, 0, 0) scale(1); }\r\n    }\r\n`;\r\n\r\nconst loader54 = keyframes`\r\n    {\r\n        0%   { -webkit-transform: translate3d(0, 0, 0) scale(1); }\r\n        50%  { -webkit-transform: translate3d(0, 24px, 0) scale(.5); }\r\n        100% { -webkit-transform: translate3d(0, 0, 0) scale(1); }\r\n    }\r\n`;\r\n\r\nconst loader55 = keyframes`\r\n    {\r\n        0%   { -webkit-transform: translate3d(0, 0, 0) scale(1); }\r\n        50%  { -webkit-transform: translate3d(0, -24px, 0) scale(.5); }\r\n        100% { -webkit-transform: translate3d(0, 0, 0) scale(1); }\r\n    }\r\n`;\r\n\r\nexport const Dots = styled.div`\r\n    height: 32px;\r\n\twidth: 32px;\r\n\t-webkit-animation: ${loader51} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n\t        animation: ${loader51} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n    \r\n    &:before {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        top: 0; left: 0;\r\n        bottom: 0; right: auto;\r\n        margin: auto;\r\n        width: 8px;\r\n        height: 8px;\r\n        background: #FFF;\r\n        border-radius: 50%;\r\n        -webkit-animation: ${loader52} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n                animation: ${loader52} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n    }\r\n    &:after {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        top: 0; left: auto;\r\n        bottom: 0; right: 0;\r\n        margin: auto;\r\n        width: 8px;\r\n        height: 8px;\r\n        background: #FFF;\r\n        border-radius: 50%;\r\n        -webkit-animation: ${loader53} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n                animation: ${loader53} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n    }\r\n    & span {\r\n        display: block;\r\n        position: absolute;\r\n        top: 0; left: 0;\r\n        bottom: 0; right: 0;\r\n        margin: auto;\r\n        height: 32px;\r\n        width: 32px;\r\n        &:before {\r\n            content: \"\";\r\n            display: block;\r\n            position: absolute;\r\n            top: 0; left: 0;\r\n            bottom: auto; right: 0;\r\n            margin: auto;\r\n            width: 8px;\r\n            height: 8px;\r\n            background: #FFF;\r\n            border-radius: 50%;\r\n            -webkit-animation: ${loader54} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n                    animation: ${loader54} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n        }\r\n        &:after {\r\n            content: \"\";\r\n            display: block;\r\n            position: absolute;\r\n            top: auto; left: 0;\r\n            bottom: 0; right: 0;\r\n            margin: auto;\r\n            width: 8px;\r\n            height: 8px;\r\n            background: #FFF;\r\n            border-radius: 50%;\r\n            -webkit-animation: ${loader55} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n                    animation: ${loader55} 2s cubic-bezier(0.770, 0.000, 0.175, 1.000) infinite;\r\n        }\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport { Dots } from './styled';\r\n\r\nexport const DotsLoader = React.memo(() =>(\r\n  <Dots><span></span></Dots>\r\n));","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  background: transparent;\n  outline: none !important;\n  position: relative;\n  padding: 1rem;\n  color: #f3f3f3;\n  text-decoration: none;\n  transition: 0.5s;\n  border: none;\n  cursor: pointer;\n  overflow: hidden;\n  /* -webkit-box-reflect: below 1px linear-gradient(transparent, #0003); */\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 10px;\n    height: 10px;\n    border-top: 2px solid #f3f3f3;\n    border-left: 2px solid #f3f3f3;\n    transition: 0.5s;\n  }\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    width: 10px;\n    height: 10px;\n    border-bottom: 2px solid #f3f3f3;\n    border-right: 2px solid #f3f3f3;\n    transition: 0.5s;\n  }\n  &:hover:before{\n    width: 100%;\n    height: 100%;\n  }\n  &:hover:after{\n    width: 100%;\n    height: 100%;\n\n  }\n  &:hover {\n    background-color: #f3f3f3;\n    color: #000;\n    box-shadow: 0 0 50px #f3f3f3;\n    transition-delay: 0.3s;\n  }\n`;\n\nexport const Link = styled.a`\n  width: 5rem;\n  height: 5rem;\n  border-radius: 50%;\n  border: 1px solid rgba(31, 31, 31, .2);\n  outline: none !important;\n  text-decoration: none;\n  background: transparent;\n`;","import React, { useCallback } from 'react';\nimport * as S from './styled';\nimport { observer } from \"mobx-react\";\n\nimport { DotsLoader } from '../DotsLoader';\nimport { FetchImageButton } from '../Buttons';\n\nexport const CDImage = observer(({\n    defaultImage,\n    hdImage,\n    isHdImageLoad,\n    setCurentImageOpacity,\n    opacity\n}) => {\n    const handleLoading = useCallback(() => {\n        console.log(\"ONLOADIMAGE\", opacity)\n        setCurentImageOpacity(1);\n    }, []);\n    return (\n        <S.ImageWrapper>\n            \n            <S.Image\n                opacity={opacity}\n                src={isHdImageLoad ? hdImage : defaultImage}\n                onLoad={handleLoading}\n                onError={() => {console.log('onError')}}\n                // decode={false}\n            />\n        </S.ImageWrapper>\n    )\n})\n\n// {!isHdImageLoad && opacity &&\n//     <S.LoadingHd>\n//         <FetchImageButton url={hdImage} />\n//         {/* <DotsLoader><span></span></DotsLoader> */}\n//     </S.LoadingHd>}","import React from 'react';\r\nimport * as S from './styled';\r\n\r\n// export const FetchImageButton = React.memo(({ onClick }) => (\r\n//   <S.Btn>Fetch hd</S.Btn>\r\n// ))\r\n\r\nexport const FetchImageButton = React.memo(({ url }) => (\r\n  <S.Link href={url} download>Fetch hd</S.Link>\r\n))","import styled, { keyframes } from 'styled-components';\n\nconst anim1 = keyframes`\n  0% {\n    clip-path: inset(0% 0% 0% 100%);\n  }\n  100% {\n    clip-path: inset(0% 0% 0% 0%);\n  }\n`;\n\nexport const Descriptions = styled.div`\n  font-family: 'Inconsolata', monospace;\n  color: #f3f3f3;\n  display: flex;\n  align-self: flex-end;\n  /* clip-path: inset(0% 0% 0% 100%); */\n  /* transition: clip-path 0.5s ease-in-out; */\n  /* max-height: 185px; */\n\n`;\n\nexport const Wrapper = styled.div`\n  --title-font-size: 44px;\n  --title-line-height: 1.25;\n  margin-right: 5rem;\n  margin-bottom: 2%;\n  max-width: 70%;\n  position: relative;\n  display: flex;\n  align-self: flex-end;\n  min-width: 200px;\n  min-height: 11rem;\n  /* &:hover ${Descriptions} {\n    animation-name: ${anim1};\n    animation-direction: forward;\n    animation-duration: 1s;\n    animation-timing-function: ease-in-out;\n  } */\n`;\n\nexport const Title = styled.div`\n    font-size: var(--title-font-size);\n    font-weight: 900;\n    -webkit-text-stroke: 1px white;\n    -webkit-text-fill-color: transparent;\n    text-indent: 1rem;\n    position: absolute;\n    top: calc(var(--title-font-size) * var(--title-line-height) * -1);\n    white-space: nowrap;\n    line-height: var(--title-line-height);\n`;","import React from 'react';\r\nimport * as S from './styled';\r\n\r\n\r\nexport const CDImageData = React.memo(({ title, date, exp }) => {\r\n  return  (\r\n    <S.Wrapper>\r\n      <S.Title>{title}</S.Title>\r\n      <S.Descriptions>{exp}</S.Descriptions>\r\n    </S.Wrapper>\r\n  )\r\n})","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  padding: 1em;\r\n  width: 11%;\r\n  margin: 20px 1% 50px;\r\n  padding: 15px 0.2%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  font-weight: 500;\r\n  letter-spacing: 1px;\r\n  font-size: 20px;\r\n  color: #f3f3f3;\r\n  font-family: 'Amatic SC', monospace;\r\n  font-weight: 600;\r\n  position: relative;\r\n  /* transform-style: preserve-3d; */\r\n  background-color: rgba(0,0,0,0.25);\r\n  transition: transform .3s ease-in-out;\r\n  cursor: pointer;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nexport const Front = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Back = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  width: 100%;\r\n  transform: rotateY(180deg);\r\n  backface-visibility: hidden;\r\n  background-color: rgba(0,0,0,0.9);\r\n`;\r\n\r\nexport const Sol = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  font-family: 'Bowlby One SC', sans-serif;\r\n`;\r\n\r\nexport const Date = styled.span`\r\n  font-size: 18px;\r\n  letter-spacing: 0;\r\n  display: block;\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  background-color: rgba(255,255,255,0.5);\r\n  height: 2px;\r\n  width: 80%;\r\n  text-align: center;\r\n  margin: 10px auto;\r\n`;\r\n\r\nexport const Temp = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Hight = styled.span`\r\n\r\n`;\r\n\r\nexport const Min = styled.span`\r\n\r\n`;","import React from 'react';\r\nimport * as S from './styled';\r\n\r\nexport const SolCard = React.memo(({ min, max, sol, date }) => (\r\n  <S.Wrapper>\r\n    <S.Front>\r\n      <S.Sol>{'Sol: ' + sol}</S.Sol>\r\n      <S.Date>{date}</S.Date>\r\n      <S.Separator />\r\n      <S.Temp>\r\n        <S.Hight>{'Hight: ' + max + '°'}</S.Hight>\r\n        <S.Min>{'Low: ' + min + '°'}</S.Min>\r\n      </S.Temp>\r\n    </S.Front>\r\n    <S.Back />\r\n  </S.Wrapper>\r\n));","import styled from 'styled-components';\n\nexport const SliderWrapper = styled.div`\n    grid-area: 2 / 1 / 3 / 2;\n    /* width: 100%; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 2%;\n    background: rgb(31,31,31);\n    background: linear-gradient(0deg, rgba(31,31,31,1) 0%, rgba(31,31,31,0.9) 22%, rgba(31,31,31,0.8) 52%, rgba(32,31,31,0.5) 85%, rgba(0,0,0,0) 100%);\n    z-index: 2;\n`;\n\nexport const DayliSection = styled.section`\n    position: relative;\n    width: 100%;\n    height: 100vh;\n    display: grid;\n    grid-template-rows: 3fr 1fr;\n    grid-template-columns: 100%;\n    overflow: hidden;\n    background-color: rgba(31,31,31,1);\n`;\n\nexport const Loading = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;","import React, { useEffect, useState, } from 'react';\nimport { observer } from \"mobx-react\";\nimport { SliderComponent, CDImage, CDImageData } from '../../Components';\nimport * as S from './styled';\n\nconst INITIALDAYS = 5;\n\nconst settings = {\n  transitionMode: \"scroll\",\n  cellSpacing: 2,\n  slidesToShow: 1.25,\n  slidesToScroll: 1,\n  heightMode: \"first\",\n  // cellAlign: \"center\",\n};\n\nexport const Dayli = observer(({ dayliData:\n  { fullDaysData, addPrevDays, loadedImages, setLoadedSlides, fullDaysDataMap }\n}) => {\n  console.log('render');\n  const [slideIndex, setSlideIndex] = useState(0);\n  const [curentImageOpacity, setCurentImageOpacity] = useState(0);\n  useEffect(() => {\n    addPrevDays(INITIALDAYS);\n  },[])\n  const beforeSlide = (_, next) => {\n    console.log('setOPacityToNull')\n    setCurentImageOpacity(0);\n    // setSlideIndex(next);\n  }\n  const afterSlide = (nextSlide) => {\n    setSlideIndex(nextSlide);\n    if (nextSlide === fullDaysData.length - 3) {\n      // console.log('po4ti last', fullDaysData.length, nextSlide)\n      addPrevDays(3);\n    }\n  }\n  const cfg = { ...settings, afterSlide, beforeSlide, slideIndex }\n  const curentSlideData = fullDaysData[slideIndex];\n  const isCurentHdImageLoad = curentSlideData && loadedImages.get(curentSlideData.date);\n  // const renderSlides = fullDaysData.filter(\n  //   (cur, i) => i === slideIndex - 1 || i === slideIndex || i === slideIndex + 1\n  // );\n  \n  return (\n        <S.DayliSection>\n        {!!fullDaysData.length &&\n          <CDImage\n            opacity={curentImageOpacity}\n            setCurentImageOpacity={setCurentImageOpacity}\n            defaultImage={curentSlideData.url}\n            hdImage={curentSlideData.hdurl}\n            isHdImageLoad={isCurentHdImageLoad}\n          />\n        }\n          {fullDaysData.length >= 3 &&\n            <S.SliderWrapper>\n              <CDImageData\n                title={curentSlideData.title}\n                date={curentSlideData.date}\n                exp={curentSlideData.explanation}\n              />\n              <SliderComponent\n                data={fullDaysData}\n                cfg={cfg}\n                setLoadedSlides={setLoadedSlides} />\n            </S.SliderWrapper>\n          }\n      </S.DayliSection>\n  )\n});","const monthsShort = [ \"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"June\",\r\n  \"July\", \"Aug.\", \"Sep.\", \"Oct.\", \"Nov.\", \"Dec.\" ];\r\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July',\r\n  'August', 'September', 'October', 'November', 'December'];\r\nexport const IMAGE_URL = 'https://mars-jpl-nasa-gov.s3.amazonaws.com/src/insight/insight_weather_bg.jpg';\r\n\r\nexport function getParsedDate(date, monthType) {\r\n  const d = new Date(date);\r\n  const earthMonth = monthType === 'short' ?\r\n    monthsShort[d.getUTCMonth()] : months[d.getUTCMonth()];\r\n  const earthDay = d.getUTCDate();\r\n  return earthMonth + ' ' + earthDay;\r\n}\r\n\r\nexport function scrollToY(y) {\r\n  window.scrollTo({ top: y, behavior: 'smooth' });\r\n}\r\n\r\nexport function delay(f, ms) {\r\n  return function() {\r\n    setTimeout(() => f.apply(this, arguments), ms);\r\n  };\r\n}","import styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n`;\n\nconst typing =  keyframes`\n  from { width: 0 }\n  to { width: 100% }\n`;\n\n/* The typewriter cursor effect */\nconst blinkCaret = keyframes`\n  from, to { border-color: transparent }\n  50% { border-color: orange }\n`;\n\nconst borderfadeOut = keyframes`\n  from, to {\n    border: none;\n  }\n`;\n\nexport const Wrapper = styled.section`\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n  position: relative;\n  /* background: url('https://mars-jpl-nasa-gov.s3.amazonaws.com/src/insight/insight_weather_bg.jpg') no-repeat top center;\n  background-size: cover; */\n`;\nexport const BgImageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(to right, rgba(0,0,0,0.6) 0%, transparent 70%);\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: -1;\n`;\n\nexport const BgImage = styled.img`\n  width: 100%;\n  height: 100%;\n  animation-name: ${fadeIn};\n  animation-duration: .3s;  \n  animation-fill-mode: forwards;\n  animation-timing-function: ease-in-out;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 1;\n  padding: 7% 10%;\n  height: 86%;\n  display: grid;\n  grid-template-rows: repeat(4, 1fr);\n  grid-template-columns: repeat(4, 1fr);\n  z-index: 1;\n`;\n\nexport const TitleWrapper = styled.div`\n  grid-area: 1/1/2/3;\n  font-family: 'Bowlby One SC', sans-serif;\n`;\n\nexport const Title = styled.div`\n  font-size: 3em;\n  width: fit-content;\n  color: #f3f3f3;\n  & h1 {\n    overflow: hidden; /* Ensures the content is not revealed until the animation */\n    /* border-right: .15em solid orange; */\n    white-space: nowrap; /* Keeps the content on a single line */\n    margin: 0 auto; /* Gives that scrolling effect as the typing happens */\n    letter-spacing: .15em; /* Adjust as needed */\n    -webkit-text-stroke: 1px white;\n    -webkit-text-fill-color: transparent;\n    font-family: 'Bowlby One SC', sans-serif;\n    /* animation: \n    ${typing} 3.5s steps(30, end),\n    ${blinkCaret} .5s step-end 7,\n    ${borderfadeOut} .1s linear 3.6s forwards; */\n  }\n`;\n\nexport const SubTitle = styled.div`\n  font-family: 'Amatic SC', monospace;\n  font-size: 3em;\n  font-weight: 700;\n  width: fit-content;\n  & h3 {\n      margin: .2em 0;\n      color: #f5f5f5;\n      opacity: 0;\n      animation: ${fadeIn} .3s ease-in-out 1s forwards;\n    }\n`;\n\nexport const Description = styled.div`\n  grid-area: 2/1/3/3;\n  font-family: 'Amatic SC', monospace;\n  font-size: 2em;\n  font-weight: 500;\n  & h5 {\n    margin: .2em 0;\n    color: #f5f5f5;\n    opacity: 0;\n    animation: ${fadeIn} .3s ease-in-out 1s forwards;\n  }\n`;\n\nexport const CurrentData = styled.div`\n  /* grid-area: 3/1/4/3; */\n  display: contents;\n  font-size: 1.5em;\n  color: #f3f3f3;\n  opacity: 0;\n  animation: ${fadeIn} .3s ease-in-out 1s forwards;\n`;\n\nexport const CurrentDate = styled.div`\n  grid-area: 3/1/4/2;\n  display: inline-flex;\n  flex-direction: column;\n  margin: 0 2rem;\n  font-family: 'Inconsolata', monospace;\n  font-size: 1.5em;\n  color: #f3f3f3;\n  opacity: 0;\n  animation: ${fadeIn} .3s ease-in-out 1s forwards;\n`;\n\nexport const CurrentSoll = styled.div`\n  font-weight: 700;\n  white-space: nowrap;\n  font-family: 'Bowlby One SC', sans-serif;\n  text-shadow: -20px 20px 2px rgba(31,29,31,0.5), 0 0 2px #1f1f1f;\n`;\n\nexport const CurentDay = styled.div`\n  white-space: nowrap;\n  font-weight: 300;\n  font-family: 'Amatic SC', monospace;\n  text-shadow: -14px 19px 2px #1f1f1f, 0 0em 1em #1f1f1f;\n`;\n\nexport const CurentTemp = styled.div`\n  grid-area: 3/2/4/3;\n  display: inline-flex;\n  flex-direction: column;\n  color: #f3f3f3;\n  opacity: 0;\n  font-size: 1.5em;\n  font-family: 'Amatic SC', monospace;\n  animation: ${fadeIn} .3s ease-in-out 1s forwards;\n`;\n\nexport const CurentMaxTemp = styled.div`\n  white-space: nowrap;\n  text-shadow: -14px 19px 2px #1f1f1f, 0 0em 1em #1f1f1f;\n  font-weight: 100;\n  \n`;\n\nexport const CurentMinTemp = styled.div`\n  white-space: nowrap;\n  font-weight: 100;\n  text-shadow: -14px 19px 2px #1f1f1f, 0 0em 1em #1f1f1f;\n  \n`;\n\nexport const SolCardsWrapper = styled.div`\n  grid-area: 4/1/5/5;\n  text-align: center;\n  /* perspective: 1400px;\n  perspective-origin: 100% 100%; */\n`;\n\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { observer } from \"mobx-react\";\nimport { SolCard } from '../../Components';\nimport { getParsedDate, IMAGE_URL } from '../../utils';\n\nimport * as S from './styled';\n\nfunction renderSolsCards(solKeys, allData) {\n  if (solKeys.length === 0) {\n    return;\n  }\n  return solKeys.map((cur) => {\n    const { mn, mx } = allData[cur].AT;\n    return (\n      <SolCard key={cur} sol={cur} min={Math.ceil(mn)} max={Math.ceil(mx)} date={getParsedDate(allData[cur].First_UTC, 'short')}/>\n    )\n  })\n}\n\nfunction renderCurrentSol(currentSol, currentDate, allData) {\n  return (\n    <S.CurrentData>\n      <S.CurrentDate>\n        <S.CurrentSoll>{!!currentSol && 'Sol ' + currentSol}</S.CurrentSoll>\n        <S.CurentDay>{!!currentDate && currentDate}</S.CurentDay>\n      </S.CurrentDate>\n      <S.CurentTemp>\n        <S.CurentMaxTemp>\n          {!!currentSol &&  'Hight: ' + Math.ceil(allData[currentSol].AT.mx) + '°'}\n        </S.CurentMaxTemp>\n        <S.CurentMinTemp>\n          {!!currentSol &&  'Low: ' + Math.ceil(allData[currentSol].AT.mn) + '°'}\n        </S.CurentMinTemp>\n      </S.CurentTemp>\n    </S.CurrentData>\n  )\n}\n\nexport const MarsTemp = observer(({ marsData:\n  { fetchData, currentSol, currentDate, allData, solKeys }, isImageLoad, image }) => {\n  \n  console.log('render MARS', currentSol, currentDate);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const memoizedSolCards = useMemo(() => renderSolsCards(solKeys, allData), [solKeys]);\n  const memoizedCurrentSol = useMemo(() =>\n    renderCurrentSol(currentSol, currentDate, allData), [currentSol]);\n  return (\n    <S.Wrapper>\n      <S.BgImageWrapper>\n       {isImageLoad &&\n          <S.BgImage\n          src={image}\n        />\n       }\n      </S.BgImageWrapper>\n      <S.Container>\n        <S.TitleWrapper>\n          <S.Title>\n            <h1>Mars Insight</h1>\n          </S.Title>\n          <S.SubTitle>\n            <h3>\n              Latest Weather at Elysium Planitia\n            </h3>\n          </S.SubTitle>\n        </S.TitleWrapper>\n        <S.Description>\n          <h5>InSight is taking daily weather measurements (temperature, wind, pressure)\n             on the surface of Mars at Elysium Planitia, a flat, smooth plain near Mars’ equator.\n          </h5>\n        </S.Description>\n        {currentSol && allData[currentSol] && memoizedCurrentSol}\n        <S.SolCardsWrapper>\n          {solKeys && memoizedSolCards}\n        </S.SolCardsWrapper>\n      </S.Container>\n    </S.Wrapper>\n  )\n});","import { fetchProfileData } from \"../fakeApi\";\nimport { observable, computed, decorate, action } from 'mobx';\n\nconst API_KEY = 'QxmYWOHTLhHjDGsHy3gbuLLz2KKBvayNviWFhsOu';\n\nexport class DailyStore {\n  daysData = [];\n  _offset = 0;\n  _array = [];\n  loadedImages = new Map();\n  fullDaysData = [];\n  renderSlides = [];\n  constructor(props) {\n      this._offset = 1;\n  }\n\n  addPrevDays = (daysNumber) => {\n    let i = 1;\n    const res = [];\n  \n    while(i <= daysNumber) {\n      const lastDay = this.daysData[this.daysData.length - 1];\n      const cD = lastDay ? new Date(lastDay) : new Date();\n      cD.setDate(cD.getDate() - i);\n      const nD = new Date(cD.getTime() - (cD.getTimezoneOffset() * 60000 )).toISOString().split(\"T\")[0];\n      res.push(nD);\n      i++;\n    }\n    this.daysData = this.daysData.concat(res);\n    this.fetchFunc(res);\n  }\n\n  fetchFunc = async (array) => {\n    await Promise.all(array.map((date, i) =>\n      fetch(`https://api.nasa.gov/planetary/apod?date=${date}&api_key=${API_KEY}`)\n        .then(resp => resp.json())\n        .then((data) => this.addfullDaysData(data, i))\n    ))\n  }\n\n  addfullDaysData = (data, i) => {\n    if (data.media_type === 'image') {\n      this.fullDaysData.push(data);\n      this._array.push(data);\n      // const img = new Image();\n      // img.src = data.hdurl;\n      // img.onload = () => {\n      //   this.setLoadedImage(true, data.date);\n      // }\n      // img.onError = () => {\n      //   data.isHdImageLoad = false;\n      //   this.setLoadedImage(false, i);\n      // }\n    }\n  }\n\n  setLoadedSlides = (i, value) => {\n    this.fullDaysData[i].isLoadUrl = value;\n  }\n\n  setLoadedImage = (isLoad, date) => {\n    this.loadedImages.set(date, isLoad);\n    // console.log(`IMAGE WAS LOAD:${isLoad}`,  this.loadedImages);\n  }\n  \n}\n\n\ndecorate(DailyStore, {\n  // daysData: observable,\n  loadedImages: observable,\n  fullDaysData: observable,\n  fullDaysDataMap: observable,\n  renderSlides: observable,\n  addPrevDays: action,\n  fetchFunc: action,\n  addfullDaysData: action.bound,\n  setLoadedImage: action.bound,\n  setLoadedSlides: action,\n  setRenderSlides: action,\n})\n","import { observable, computed, decorate, action } from 'mobx';\nimport { getParsedDate } from '../utils';\n\nexport class MarsStore {\n  solKeys = [];\n  allData = {};\n  currentSol = null;\n  currentDate = null;\n  \n  fetchData = async () => {\n    try {\n      const test = await fetch('https://api.nasa.gov/insight_weather/?api_key=QxmYWOHTLhHjDGsHy3gbuLLz2KKBvayNviWFhsOu&feedtype=json&ver=1.0');\n      const resp = await test.json();\n      this.setAllData(resp);\n      this.setSolKeys(resp.sol_keys);\n      this.currentSollSetter(resp.sol_keys);\n      const featuredSol = resp.sol_keys[resp.sol_keys.length - 1];\n      const featuredSolObject = resp[featuredSol];\n      this.currentDateSetter(getParsedDate(featuredSolObject.First_UTC));\n      console.log(resp);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  currentSollSetter(sols) {\n    this.currentSol = sols[sols.length - 1];\n  }\n\n  currentDateSetter(date) {\n     this.currentDate = date;\n  }\n\n  setSolKeys = (solKeys) => {\n    this.solKeys = solKeys;\n  }\n  \n  setAllData = (allData) => {\n    this.allData = allData\n  }\n  \n}\n\ndecorate(MarsStore, {\n  allData: observable,\n  solKeys: observable,\n  curentSoll: observable,\n  currentDate: observable,\n  currentDateSetter: action,\n  currentSollSetter: action\n})\n\n","import { observable, decorate, action } from 'mobx';\r\n\r\nexport class SharedStore {\r\n  marsYCoord = 0;\r\n  currentPage = null;\r\n  marsWasMounted = false;\r\n  dayliWasMounted = false;\r\n  setCurentPage = (page) => {\r\n    this.currentPage = page;\r\n  }\r\n}\r\n\r\ndecorate(SharedStore, {\r\n  marsWasMounted: observable,\r\n  dayliWasMounted: observable,\r\n  marsYCoord: observable,\r\n  currentPage: observable,\r\n  setCurentPage: action,\r\n})\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  \r\n`;\r\n\r\nexport const ScrollControls = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  /* min-width: 135px; */\r\n  top: 50%;\r\n  right: -65px;\r\n  z-index: 100;\r\n  padding: 1rem;\r\n  cursor: pointer;\r\n  transition: right 0.3s;\r\n  background-color: rgba(0,0,0,0.25);\r\n  &:hover {\r\n    right: 0px;\r\n  }\r\n  &:hover p {\r\n    opacity: 1;\r\n  }\r\n  &:hover span {\r\n    transform: scale(1.5);\r\n  }\r\n  & div {\r\n    color: #f1f1f1;\r\n    display: inline-flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    font-size: 0.6rem;\r\n    &:hover {\r\n      color: gray;\r\n      & span {\r\n        background-color: gray;\r\n      }\r\n    }\r\n    & p {\r\n      transition: opacity 0.3s;\r\n      opacity: 0;\r\n      white-space: nowrap;\r\n    \r\n    }\r\n    & span {\r\n      margin: 0.5rem;\r\n      background-color: #f1f1f1;\r\n      width: 0.6rem;\r\n      height: 0.6rem;\r\n      border-radius: 50%;\r\n      transition: transform 0.3s;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FakeView = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  color: black;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 40px;\r\n`;\r\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { Dayli, MarsTemp } from './Pages';\nimport { observer } from \"mobx-react\";\nimport { DailyStore, MarsStore } from './store';\nimport { scrollToY, delay } from './utils';\nimport marsImage from './images/mars.jpg';\n\nimport * as S from './styled';\n\nconst dayliStore = new DailyStore();\nconst marsStore = new MarsStore();\n\nexport const App = observer(({ store }) => {\n  const [imageVisible, setImageVisible] = useState(false);\n  useEffect(() => {\n    loadImage(setImageVisible);\n    store.marsYCoord = window.innerHeight;\n    const { y } = document.body.getBoundingClientRect()\n    store.currentPage = Math.abs(y) / window.innerHeight;\n  }, []);\n  const scrollToMars = () => {\n    store.setCurentPage(1);\n    if (store.marsWasMounted) {\n      scrollToY(store.marsYCoord);    \n    } else {\n      const d = delay(scrollToY, 300);\n      d(store.marsYCoord);\n    }\n  }\n  const scrollToDayli = () => {\n    store.setCurentPage(0);\n     if (store.dayliWasMounted) {\n      scrollToY(0);    \n    } else {\n      const d = delay(scrollToY, 300);\n      d(0);\n    }\n  }\n  const renderMars = useMemo(() => () => {\n    if ((store.currentPage !== null && store.currentPage === 1) || store.marsWasMounted) {\n      if (!store.marsWasMounted) {\n        store.marsWasMounted = true;\n      }\n      return <MarsTemp id=\"mars\" marsData={marsStore} isImageLoad={imageVisible} image={marsImage} />\n    }\n    return <S.FakeView className=\"fakeMars\"/>\n  }, [store.currentPage, imageVisible])\n  const renderDayli = useMemo(() => () => {\n    if ((store.currentPage !== null && store.currentPage === 0) || store.dayliWasMounted) {\n      if (!store.dayliWasMounted) {\n        store.dayliWasMounted = true;\n      }\n      return <Dayli dayliData={dayliStore} />\n    }\n    return <S.FakeView className=\"fakeDayli\"/>\n  }, [store.currentPage])\n\n  const onWheel = (e) => {\n    \n  }\n  return (\n    <S.Container onWheel={onWheel}>\n      <S.ScrollControls>\n          <div onClick={scrollToDayli}><span /><p>APOD</p></div>\n          <div onClick={scrollToMars}><span /><p>Mars Insight</p></div>\n      </S.ScrollControls>\n      {renderDayli()}\n      {renderMars()}\n    </S.Container>\n  )\n})\n\n\nfunction loadImage(callback) {\n  const img = new Image();\n     img.src = marsImage;\n     img.onload = () => {\n       callback(true)\n     }\n     img.onerror = () => {\n       callback(false)\n     }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport {App} from './App';\nimport { SharedStore } from './store';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst sharedStore = new SharedStore();\n\nconst rootEl = document.getElementById('root')\n// ReactDOM.render(<App />, rootEl)\n// const root = ReactDOM.createRoot(rootEl)\n// root.render(<Daily dayliData={dayliStore} />)\n// ReactDOM.render(<Dayli dayliData={dayliStore} />, rootEl)\nReactDOM.render(<App store={sharedStore} />, rootEl)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}